import pandas as pd

# 1) 표 형식의 데이터 파일을 읽기
# 판다스에서 csv파일을 읽을 때는 read_csv() 메서드 이용
# DataFrame_data = pd.read_csv(file_name [, options])
df1 = pd.read_csv('./input/sea_rain1.csv')
print(df1)
#      연도       동해       남해       서해       전체
# 0  1996  17.4629  17.2288  14.4360  15.9067
# 1  1997  17.4116  17.4092  14.8248  16.1526
# 2  1998  17.5944  18.0110  15.2512  16.6044
# 3  1999  18.1495  18.3175  14.8979  16.6284
# 4  2000  17.9288  18.1766  15.0504  16.6178

print(df1.dtypes)
# 연도      int64
# 동해    float64
# 남해    float64
# 서해    float64
# 전체    float64
# dtype: object

# 파이썬에서 텍스트파일을 생성하면 기본 문자 인코딩이 'utf-8'이고, 메모장의 경우 기본 문자 인코딩이 'cp949'.
# sea_rain1_from_notepad.csv 파일을 경우 메모장으로 생성해서, 인코딩이 'cp949'이므로 에러가 남

d2 = pd.read_csv('./input/sea_rain1_from_notepad.csv', encoding='cp949')
print(d2)
#      연도       동해       남해       서해       전체
# 0  1996  17.4629  17.2288  14.4360  15.9067
# 1  1997  17.4116  17.4092  14.8248  16.1526
# 2  1998  17.5944  18.0110  15.2512  16.6044
# 3  1999  18.1495  18.3175  14.8979  16.6284
# 4  2000  17.9288  18.1766  15.0504  16.6178

# seq_rain1_space.txt 파일의 경우 콤마가 아니라 공백(빈칸)으로 구분된 경우
# sep 옵션을 이용해서 구분차가 콤마가 아니라 공백임을 지정
# 아래 처럼 확장자가 txt라도 read_csv()로 읽을 수 있음
d3 = pd.read_csv('./input/sea_rain1_space.txt', sep=' ')
print(d3)
#      연도       동해       남해       서해       전체
# 0  1996  17.4629  17.2288  14.4360  15.9067
# 1  1997  17.4116  17.4092  14.8248  16.1526
# 2  1998  17.5944  18.0110  15.2512  16.6044
# 3  1999  18.1495  18.3175  14.8979  16.6284
# 4  2000  17.9288  18.1766  15.0504  16.6178

# read_csv()로 텍스트 파일을 읽어오면 index가 자동으로 지정
# 이 때 자동으로 생성된 index 말고 데이터 파일에서 특정 열 column을 index로 선택하려면 'index_col=열_이름'을 추가
c4 = pd.read_csv('./input/sea_rain1.csv', index_col='연도')
print(c4)
#            동해       남해       서해       전체
# 연도
# 1996  17.4629  17.2288  14.4360  15.9067
# 1997  17.4116  17.4092  14.8248  16.1526
# 1998  17.5944  18.0110  15.2512  16.6044
# 1999  18.1495  18.3175  14.8979  16.6284
# 2000  17.9288  18.1766  15.0504  16.6178